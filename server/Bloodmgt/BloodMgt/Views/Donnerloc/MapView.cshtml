@model BloodMgt.Models.Donnerlocation

@{
    ViewData["Title"] = "MapView";
    Layout = "~/Views/Shared/_MapLayout.cshtml";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<script src="~/scripts/jquery-3.3.1.min.js"></script>
<script src="~/scripts/bootstrap.min.js"></script>
<script src="~/scripts/jquery.validate.min.js"></script>
<script src="~/scripts/jquery.validate.unobtrusive.min.js"></script>
<div id="map_canvas" style="width: 400px; height: 300px"></div>

<div class="card">
   
    @using (Html.BeginForm("Location", "Home", FormMethod.Post))
    {
        <div class="container py-4">
            <h5 class="text-center">MAP </h5>
            <div class="card">
                <div class="card-header bg-info">
                    <h6 class="card-title text-uppercase text-white">Google Map Location</h6>
                </div>
                <div class="card-body">
                    <button style="margin-bottom:10px;" type="button" data-target="#myMap" data-toggle="modal" class="btn btn-danger btn-sm rounded-0"><i class="fa fa-plus-circle"></i> Add New Location</button>

                    <div class="modal fade" id="myMap">
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title">Add New Location</h4>
                                    <button type="button" class="close" data-dismiss="modal">×</button>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-sm-4 col-md-4 col-xs-12">
                                            <div class="form-group">
                                                <label>City Name:</label>
                                                @Html.EditorFor(model =>model.city, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-xs-12">
                                            <div class="form-group">
                                                <label>Latitude:</label>
                                                @Html.EditorFor(model => model.latitude, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.latitude, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-xs-12">
                                            <div class="form-group">
                                                <label>Longitude:</label>
                                                @Html.EditorFor(model => model.longitude, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.longitude, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-4 col-md-4 col-xs-12">
                                            <div class="form-group">
                                                <label>BG:</label>
                                                @Html.EditorFor(model => model.bg, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.bg, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-sm-4 col-md-4 col-xs-12">
                                            <div class="form-group">
                                                <label>Donnerid:</label>
                                                @Html.EditorFor(model => model.donnerid, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.bg, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-danger rounded-0" data-dismiss="modal">Close</button>
                                    <button class="btn btn-primary rounded-0">Submit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="dvMap" class="card" style="width: 100%; height: 400px">
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="form-group">
        <input type="text" id="txt_location" class="form-control" />
    </div>
    <div>
        <input type="button" value="Search" onclick="getmap()">
    </div>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC6v5-2uaq_wusHDktM9ILcqIrlPtnZgEk&sensor=false" type="text/javascript"></script>
    <script>
        var markers = @Html.Raw(ViewBag.Markers);

        var mapcode;
        var diag;
        window.onload = function () {
            var mapOptions = {
                center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
                zoom: 8,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            var infoWindow = new google.maps.InfoWindow();
            var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
            for (i = 0; i < markers.length; i++) {
                var data = markers[i]
                var myLatlng = new google.maps.LatLng(data.lat, data.lng);
                var marker = new google.maps.Marker({
                    position: myLatlng,
                    map: map,
                    title: data.title
                });
                (function (marker, data) {
                    google.maps.event.addListener(marker, "click", function (e) {
                        infoWindow.setContent(data.bg, data.id);
                        infoWindow.open(map, marker);
                    });
                })(marker, data);
            }
        }
    </script>
